fragment ValetFields on Valet {
  image
  uid
  displayName
}

query ValetMe {
  valetMe {
    uid
    companyId
  }
}

mutation CreateValet($createValetInput: CreateValetInput!) {
  createValet(createValetInput: $createValetInput) {
    uid
  }
}

query companyValets(
  $distinct: [ValetScalarFieldEnum!]
  $skip: Float
  $take: Float
  $cursor: ValetWhereUniqueInput
  $orderBy: [ValetOrderByWithRelationInput!]
  $where: ValetWhereInput
) {
  companyValets(
    distinct: $distinct
    skip: $skip
    take: $take
    cursor: $cursor
    orderBy: $orderBy
    where: $where
  ) {
    displayName
    uid
    createdAt
    updatedAt
    companyId
    image
    licenceID
  }

  companyValetsTotal(where: $where)
}

query valetPickups($skip: Float, $take: Float) {
  valetPickups(skip: $skip, take: $take) {
    id
    vehicleNumber
    valetAssignment {
      pickupLat
      pickupLng
      pickupValetId
    }
    startTime
    endTime
    slot {
      garage {
        address {
          lat
          lng
        }
      }
    }
  }
  valetPickupsTotal
}

query valetDrops($skip: Float, $take: Float) {
  valetDrops(skip: $skip, take: $take) {
    id
    vehicleNumber
    startTime
    endTime
    valetAssignment {
      returnLat
      returnLng
      returnValetId
    }
    slot {
      garage {
        address {
          lat
          lng
        }
      }
    }
  }
  valetDropsTotal
}

mutation AssignValet($bookingId: Float!, $status: String!) {
  assignValet(bookingId: $bookingId, status: $status) {
    id
  }
}

fragment ValetBookingFields on Booking {
  id
  vehicleNumber
  passcode
  status
  startTime
  endTime
  slot {
    garage {
      address {
        lat
        lng
      }
    }
  }
}

query myPickupTrips(
  $distinct: [BookingScalarFieldEnum!]
  $skip: Float
  $take: Float
  $orderBy: [BookingOrderByWithRelationInput!]
  $where: BookingWhereInput
) {
  bookingsForValet(
    distinct: $distinct
    skip: $skip
    take: $take
    orderBy: $orderBy
    where: $where
  ) {
    ...ValetBookingFields
    valetAssignment {
      pickupLat
      pickupLng
      pickupValetId
    }
  }
  bookingsCount(where: $where) {
    count
  }
}
query myDropTrips(
  $distinct: [BookingScalarFieldEnum!]
  $skip: Float
  $take: Float
  $orderBy: [BookingOrderByWithRelationInput!]
  $where: BookingWhereInput
) {
  bookingsForValet(
    distinct: $distinct
    skip: $skip
    take: $take
    orderBy: $orderBy
    where: $where
  ) {
    ...ValetBookingFields
    valetAssignment {
      returnLat
      returnLng
      returnValetId
    }
  }
  bookingsCount(where: $where) {
    count
  }
}
